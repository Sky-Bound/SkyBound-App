/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/potdtest",{

/***/ "./pages/potdtest.js":
/*!***************************!*\
  !*** ./pages/potdtest.js ***!
  \***************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Main call\nfunction nasaRequest() {\n    let xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n            let data = JSON.parse(this.responseText);\n            // Data from NASA API json\n            let copyright = data[\"copyright\"];\n            let date = data[\"date\"];\n            let explanation = data[\"explanation\"];\n            let hdurl = data[\"hdurl\"];\n            let media_type = data[\"media_type\"];\n            let title = data[\"title\"];\n            let url = data[\"url\"];\n            // HTML markup for images and videos\n            let imageType = '\\n          <div\\n            class=\"bg-image hover-overlay ripple shadow-1-strong rounded\"\\n            data-ripple-color=\"light\"\\n          >\\n            <img id=\"wrapper-image\" src=\"\" class=\"w-100\" />\\n            <a id=\"wrapper-hdurl\" href=\"\" target=\"_blank\">\\n              <div class=\"mask\" style=\"background-color: rgba(251, 251, 251, 0.2);\"></div>\\n            </a>\\n          </div>\\n          ';\n            let videoType = '\\n          <div class=\"ratio ratio-16x9\">\\n            <iframe\\n              class=\"shadow-1-strong rounded\"\\n              id=\"wrapper-video\"\\n              src=\"\"\\n              title=\"YouTube video\"\\n              allowfullscreen\\n            ></iframe>\\n          </div>\\n          ';\n            // Static elements\n            document.getElementById(\"wrapper-title\").innerHTML = title;\n            document.getElementById(\"wrapper-explanation\").innerHTML = explanation;\n            document.getElementById(\"wrapper-copyright\").innerHTML = copyright;\n            document.getElementById(\"intro-date\").innerHTML = date;\n            // If statement for images/videos\n            if (media_type === \"video\") {\n                document.getElementById(\"wrapper-media\").innerHTML = videoType;\n                document.getElementById(\"wrapper-video\").src = url;\n            } else {\n                document.getElementById(\"wrapper-media\").innerHTML = imageType;\n                document.getElementById(\"wrapper-image\").src = url;\n                document.getElementById(\"wrapper-hdurl\").href = hdurl;\n            }\n        }\n    };\n    // Acessing a value from the date picker\n    let datepicker_date = document.getElementById(\"wrapper-date\").value;\n    // NASA API link\n    let queryUrl = \"https://api.nasa.gov/planetary/apod?\";\n    // API KEY\n    let queryKey = \"api_key=DaFi4M1aSffvFg0EGzfCxWruc6FyhR7wStWMPtxf&\";\n    // Selected date\n    let queryDate = \"date=\" + datepicker_date + \"&\";\n    // Full query\n    let queryFull = queryUrl + queryKey + queryDate;\n    xmlhttp.open(\"GET\", queryFull, true);\n    xmlhttp.send();\n}\n// Datepicker init\nconst datePicker = document.getElementById(\"date-picker\");\n// Call nasaRequest on date change\ndatePicker.addEventListener(\"dateChange.mdb.datepicker\", (e)=>{\n    nasaRequest();\n});\n// Initial call on page load\nnasaRequest().onload;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9wb3RkdGVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZO0FBQ1osU0FBU0EsY0FBYztJQUNuQixJQUFJQyxVQUFVLElBQUlDO0lBQ2xCRCxRQUFRRSxrQkFBa0IsR0FBRyxXQUFZO1FBQ3ZDLElBQUksSUFBSSxDQUFDQyxVQUFVLElBQUksS0FBSyxJQUFJLENBQUNDLE1BQU0sSUFBSSxLQUFLO1lBQzlDLElBQUlDLE9BQU9DLEtBQUtDLEtBQUssQ0FBQyxJQUFJLENBQUNDLFlBQVk7WUFFdkMsMEJBQTBCO1lBQzFCLElBQUlDLFlBQVlKLElBQUksQ0FBQyxZQUFZO1lBQ2pDLElBQUlLLE9BQU9MLElBQUksQ0FBQyxPQUFPO1lBQ3ZCLElBQUlNLGNBQWNOLElBQUksQ0FBQyxjQUFjO1lBQ3JDLElBQUlPLFFBQVFQLElBQUksQ0FBQyxRQUFRO1lBQ3pCLElBQUlRLGFBQWFSLElBQUksQ0FBQyxhQUFhO1lBQ25DLElBQUlTLFFBQVFULElBQUksQ0FBQyxRQUFRO1lBQ3pCLElBQUlVLE1BQU1WLElBQUksQ0FBQyxNQUFNO1lBRXJCLG9DQUFvQztZQUNwQyxJQUFJVyxZQUFhO1lBV2pCLElBQUlDLFlBQWE7WUFZakIsa0JBQWtCO1lBQ2xCQyxTQUFTQyxjQUFjLENBQUMsaUJBQWlCQyxTQUFTLEdBQUdOO1lBQ3JESSxTQUFTQyxjQUFjLENBQ3JCLHVCQUNBQyxTQUFTLEdBQUdUO1lBQ2RPLFNBQVNDLGNBQWMsQ0FBQyxxQkFBcUJDLFNBQVMsR0FBR1g7WUFDekRTLFNBQVNDLGNBQWMsQ0FBQyxjQUFjQyxTQUFTLEdBQUdWO1lBRWxELGlDQUFpQztZQUNqQyxJQUFJRyxlQUFlLFNBQVM7Z0JBQzFCSyxTQUFTQyxjQUFjLENBQUMsaUJBQWlCQyxTQUFTLEdBQUdIO2dCQUNyREMsU0FBU0MsY0FBYyxDQUFDLGlCQUFpQkUsR0FBRyxHQUFHTjtZQUNqRCxPQUFPO2dCQUNMRyxTQUFTQyxjQUFjLENBQUMsaUJBQWlCQyxTQUFTLEdBQUdKO2dCQUNyREUsU0FBU0MsY0FBYyxDQUFDLGlCQUFpQkUsR0FBRyxHQUFHTjtnQkFDL0NHLFNBQVNDLGNBQWMsQ0FBQyxpQkFBaUJHLElBQUksR0FBR1Y7WUFDbEQsQ0FBQztRQUNILENBQUM7SUFDSDtJQUNBLHdDQUF3QztJQUN4QyxJQUFJVyxrQkFBa0JMLFNBQVNDLGNBQWMsQ0FBQyxnQkFBZ0JLLEtBQUs7SUFDbkUsZ0JBQWdCO0lBQ2hCLElBQUlDLFdBQVc7SUFDZixVQUFVO0lBQ1YsSUFBSUMsV0FBVztJQUNmLGdCQUFnQjtJQUNoQixJQUFJQyxZQUFZLFVBQVVKLGtCQUFrQjtJQUM1QyxhQUFhO0lBQ2IsSUFBSUssWUFBWUgsV0FBV0MsV0FBV0M7SUFFdEMzQixRQUFRNkIsSUFBSSxDQUFDLE9BQU9ELFdBQVcsSUFBSTtJQUNuQzVCLFFBQVE4QixJQUFJO0FBQ2Q7QUFFQSxrQkFBa0I7QUFDbEIsTUFBTUMsYUFBYWIsU0FBU0MsY0FBYyxDQUFDO0FBQzNDLGtDQUFrQztBQUNsQ1ksV0FBV0MsZ0JBQWdCLENBQUMsNkJBQTZCLENBQUNDLElBQU07SUFDOURsQztBQUNGO0FBRUEsNEJBQTRCO0FBQzVCQSxjQUFjbUMsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9wb3RkdGVzdC5qcz9iZWQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1haW4gY2FsbFxuZnVuY3Rpb24gbmFzYVJlcXVlc3QoKSB7XG4gICAgbGV0IHhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT0gNCAmJiB0aGlzLnN0YXR1cyA9PSAyMDApIHtcbiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHRoaXMucmVzcG9uc2VUZXh0KTtcbiAgXG4gICAgICAgIC8vIERhdGEgZnJvbSBOQVNBIEFQSSBqc29uXG4gICAgICAgIGxldCBjb3B5cmlnaHQgPSBkYXRhW1wiY29weXJpZ2h0XCJdO1xuICAgICAgICBsZXQgZGF0ZSA9IGRhdGFbXCJkYXRlXCJdO1xuICAgICAgICBsZXQgZXhwbGFuYXRpb24gPSBkYXRhW1wiZXhwbGFuYXRpb25cIl07XG4gICAgICAgIGxldCBoZHVybCA9IGRhdGFbXCJoZHVybFwiXTtcbiAgICAgICAgbGV0IG1lZGlhX3R5cGUgPSBkYXRhW1wibWVkaWFfdHlwZVwiXTtcbiAgICAgICAgbGV0IHRpdGxlID0gZGF0YVtcInRpdGxlXCJdO1xuICAgICAgICBsZXQgdXJsID0gZGF0YVtcInVybFwiXTtcbiAgXG4gICAgICAgIC8vIEhUTUwgbWFya3VwIGZvciBpbWFnZXMgYW5kIHZpZGVvc1xuICAgICAgICBsZXQgaW1hZ2VUeXBlID0gYFxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwiYmctaW1hZ2UgaG92ZXItb3ZlcmxheSByaXBwbGUgc2hhZG93LTEtc3Ryb25nIHJvdW5kZWRcIlxuICAgICAgICAgICAgZGF0YS1yaXBwbGUtY29sb3I9XCJsaWdodFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGltZyBpZD1cIndyYXBwZXItaW1hZ2VcIiBzcmM9XCJcIiBjbGFzcz1cInctMTAwXCIgLz5cbiAgICAgICAgICAgIDxhIGlkPVwid3JhcHBlci1oZHVybFwiIGhyZWY9XCJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1hc2tcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUxLCAyNTEsIDI1MSwgMC4yKTtcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICBgO1xuICAgICAgICBsZXQgdmlkZW9UeXBlID0gYFxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYXRpbyByYXRpby0xNng5XCI+XG4gICAgICAgICAgICA8aWZyYW1lXG4gICAgICAgICAgICAgIGNsYXNzPVwic2hhZG93LTEtc3Ryb25nIHJvdW5kZWRcIlxuICAgICAgICAgICAgICBpZD1cIndyYXBwZXItdmlkZW9cIlxuICAgICAgICAgICAgICBzcmM9XCJcIlxuICAgICAgICAgICAgICB0aXRsZT1cIllvdVR1YmUgdmlkZW9cIlxuICAgICAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW5cbiAgICAgICAgICAgID48L2lmcmFtZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICBgO1xuICBcbiAgICAgICAgLy8gU3RhdGljIGVsZW1lbnRzXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid3JhcHBlci10aXRsZVwiKS5pbm5lckhUTUwgPSB0aXRsZTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICAgICAgXCJ3cmFwcGVyLWV4cGxhbmF0aW9uXCJcbiAgICAgICAgKS5pbm5lckhUTUwgPSBleHBsYW5hdGlvbjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwcGVyLWNvcHlyaWdodFwiKS5pbm5lckhUTUwgPSBjb3B5cmlnaHQ7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW50cm8tZGF0ZVwiKS5pbm5lckhUTUwgPSBkYXRlO1xuICBcbiAgICAgICAgLy8gSWYgc3RhdGVtZW50IGZvciBpbWFnZXMvdmlkZW9zXG4gICAgICAgIGlmIChtZWRpYV90eXBlID09PSBcInZpZGVvXCIpIHtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndyYXBwZXItbWVkaWFcIikuaW5uZXJIVE1MID0gdmlkZW9UeXBlO1xuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid3JhcHBlci12aWRlb1wiKS5zcmMgPSB1cmw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwcGVyLW1lZGlhXCIpLmlubmVySFRNTCA9IGltYWdlVHlwZTtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndyYXBwZXItaW1hZ2VcIikuc3JjID0gdXJsO1xuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid3JhcHBlci1oZHVybFwiKS5ocmVmID0gaGR1cmw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIC8vIEFjZXNzaW5nIGEgdmFsdWUgZnJvbSB0aGUgZGF0ZSBwaWNrZXJcbiAgICBsZXQgZGF0ZXBpY2tlcl9kYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwcGVyLWRhdGVcIikudmFsdWU7XG4gICAgLy8gTkFTQSBBUEkgbGlua1xuICAgIGxldCBxdWVyeVVybCA9IFwiaHR0cHM6Ly9hcGkubmFzYS5nb3YvcGxhbmV0YXJ5L2Fwb2Q/XCI7XG4gICAgLy8gQVBJIEtFWVxuICAgIGxldCBxdWVyeUtleSA9IFwiYXBpX2tleT1EYUZpNE0xYVNmZnZGZzBFR3pmQ3hXcnVjNkZ5aFI3d1N0V01QdHhmJlwiO1xuICAgIC8vIFNlbGVjdGVkIGRhdGVcbiAgICBsZXQgcXVlcnlEYXRlID0gXCJkYXRlPVwiICsgZGF0ZXBpY2tlcl9kYXRlICsgXCImXCI7XG4gICAgLy8gRnVsbCBxdWVyeVxuICAgIGxldCBxdWVyeUZ1bGwgPSBxdWVyeVVybCArIHF1ZXJ5S2V5ICsgcXVlcnlEYXRlO1xuICBcbiAgICB4bWxodHRwLm9wZW4oXCJHRVRcIiwgcXVlcnlGdWxsLCB0cnVlKTtcbiAgICB4bWxodHRwLnNlbmQoKTtcbiAgfVxuICBcbiAgLy8gRGF0ZXBpY2tlciBpbml0XG4gIGNvbnN0IGRhdGVQaWNrZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGUtcGlja2VyXCIpO1xuICAvLyBDYWxsIG5hc2FSZXF1ZXN0IG9uIGRhdGUgY2hhbmdlXG4gIGRhdGVQaWNrZXIuYWRkRXZlbnRMaXN0ZW5lcihcImRhdGVDaGFuZ2UubWRiLmRhdGVwaWNrZXJcIiwgKGUpID0+IHtcbiAgICBuYXNhUmVxdWVzdCgpO1xuICB9KTtcbiAgXG4gIC8vIEluaXRpYWwgY2FsbCBvbiBwYWdlIGxvYWRcbiAgbmFzYVJlcXVlc3QoKS5vbmxvYWQ7Il0sIm5hbWVzIjpbIm5hc2FSZXF1ZXN0IiwieG1saHR0cCIsIlhNTEh0dHBSZXF1ZXN0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJjb3B5cmlnaHQiLCJkYXRlIiwiZXhwbGFuYXRpb24iLCJoZHVybCIsIm1lZGlhX3R5cGUiLCJ0aXRsZSIsInVybCIsImltYWdlVHlwZSIsInZpZGVvVHlwZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJzcmMiLCJocmVmIiwiZGF0ZXBpY2tlcl9kYXRlIiwidmFsdWUiLCJxdWVyeVVybCIsInF1ZXJ5S2V5IiwicXVlcnlEYXRlIiwicXVlcnlGdWxsIiwib3BlbiIsInNlbmQiLCJkYXRlUGlja2VyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJvbmxvYWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/potdtest.js\n"));

/***/ })

});